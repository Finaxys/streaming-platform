---
# This playbook generates the DC/OS upgrade scripts
- name: 'check: required attributes present for update?'
  fail:
    msg: |
      If we don't have all the informations (dcos_upgrade_from_version),
      we cannot update the existing DC/OS cluster.
  when: >
    dcos_upgrade_from_version == ''

- name: Generate DC/OS upgrade files
  shell: "bash dcos_generate_config.sh --generate-node-upgrade-script {{ dcos_upgrade_from_version }}"
  args:
    chdir: "{{ dcos_path_bootstrap }}"

- name: Get upgrade directory hash
  shell: "ls -td -- */ | head -n 1 | cut -d'/' -f1"
  args:
    chdir: "{{ dcos_path_bootstrap }}/genconf/serve/upgrade"
  register: upgrade_hash

- name: check upgrade script exists
  stat:
    path: "{{ dcos_path_bootstrap }}/genconf/serve/upgrade/{{ upgrade_hash.stdout }}/dcos_node_upgrade.sh"
  register: sh_stat

- name: create directory latest
  file: path={{ dcos_path_bootstrap }}/genconf/serve/upgrade/latest state=directory mode=0755

- name: move upgrade script to folder latest
  shell: "cp {{ upgrade_hash.stdout }}/dcos_node_upgrade.sh latest/"
  args:
    chdir: "{{ dcos_path_bootstrap }}/genconf/serve/upgrade"
  when: sh_stat.stat.exists
