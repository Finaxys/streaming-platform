---
# This playbook connects from the kubectl CLI on your ansible control machine to your kubernetes cluster

- name: check if k8s CLI is already installed
  become: false
  find:
    paths: '..'
    file_type: file
    patterns: 'kubectl'
  register: cli_k8s_installed
  when:  dcos_k8s_enabled

- name: install kubectl
  when: (cli_k8s_installed.matched|int == 0 or dcos_cli_upgrade) and dcos_k8s_enabled
  block:
  - name: create temporay file
    become: false
    get_url: url="https://storage.googleapis.com/kubernetes-release/release/stable.txt" dest="../kubectl-version" mode=0744 force=yes

  - name: detect kubernetes version
    shell: cat "../kubectl-version"
    register: kubernetes_version

  - name: download the k8s CLI Linux binary (kubectl) to your current directory and make it executable
    become: false
    get_url: url="https://storage.googleapis.com/kubernetes-release/release/{{ kubernetes_version.stdout }}/bin/linux/amd64/kubectl" dest="../kubectl" mode=0755 force=yes
    when: ansible_os_family == "Debian" or ansible_os_family == "RedHat"

  - name: download the k8s CLI Darwin binary (kubectl) to your current directory and make it executable
    become: false
    get_url: url="https://storage.googleapis.com/kubernetes-release/release/{{ kubernetes_version.stdout }}/bin/darwin/amd64/kubectl" dest="../kubectl" mode=0755 force=yes
    when: ansible_os_family == "Darwin"

  - name: clean-up temporay file
    become: false
    file:
      path: '../kubectl-version'
      state: absent

- name: configure kubernetes on DC/OS for common kubectl CLI commands
  command: "dcos package install kubernetes --package-version {{ dcos_k8s_package_version }} --yes --cli"

- name: wait for kubernetes to come up
  uri:
    url: "https://{{ groups['webservers'][5] }}:6443"
    validate_certs: no
  retries: 60
  delay: 10
  register: result
  until: ('status' in result) and (result.status == 401)
  changed_when: false
  failed_when: false

- name: configure kubernetes on DC/OS for common kubectl CLI commands
  command: " ssh -4 -f -o \"UserKnownHostsFIle=/dev/null\" -o \"StrictHostKeyChecking=no\" -N -L 9000:apiserver-insecure.kubernetes.l4lb.thisdcos.directory:9000 vagrant@192.168.65.90 "
