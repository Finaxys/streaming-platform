---
- import_tasks: pre-check.yml

- import_tasks: init.yml

- name: Download DC/OS installation file
  get_url: url="{{ dcos_download }}" dest={{ dcos_path_bootstrap }}/dcos_generate_config.sh mode=0440 force=yes

- name: Generate IP detection script.
  template: src=ip-detect-{{ dcos_iaas_target }}.j2 dest={{ dcos_path_bootstrap }}/genconf/ip-detect mode=0644

- name: Set Public IP detection script.
  template: src=ip-detect-public-{{ dcos_iaas_target }}.j2 dest={{ dcos_path_bootstrap }}/genconf/ip-detect-public mode=0644
  when: dcos_iaas_target != "onprem"

- name: Generate DC/OS configuration
  template: src=config.yaml.j2 dest={{ dcos_path_bootstrap }}/genconf/config.yaml mode=0644

- name: Set Fault Domain detection script
  copy: src=fault-domain-detect dest={{ dcos_path_bootstrap }}/genconf/fault-domain-detect mode=0644
  when: dcos_iaas_target != "onprem"

- name: Generate DC/OS bootstrap files
  shell: "bash dcos_generate_config.sh"
  args:
    chdir: "{{ dcos_path_bootstrap }}"
  when: dcos_upgrade == False

- import_tasks: upgrade.yml
  when: dcos_upgrade == True

- name: Start web server to serve the bootstrap files
  docker_container:
    name: dcos_nginx
    image: nginx
    state: started
    recreate: yes
    restart: yes
    ports:
    - "{{ dcos_port_webserver }}:80"
    volumes:
    - "{{ dcos_path_bootstrap }}/genconf/serve:/usr/share/nginx/html:ro"
